{
  "path": ".",
  "variables": {
    "allowlist": {
      "name": "allowlist",
      "type": "list(object({\n    address     = optional(string)\n    description = optional(string)\n  }))",
      "description": "Set of IP address and description to allowlist in database",
      "default": [],
      "pos": {
        "filename": "variables.tf",
        "line": 143
      }
    },
    "auto_scaling": {
      "name": "auto_scaling",
      "type": "object({\n    cpu = object({\n      rate_increase_percent       = optional(number, 10)\n      rate_limit_count_per_member = optional(number, 20)\n      rate_period_seconds         = optional(number, 900)\n      rate_units                  = optional(string, \"count\")\n    })\n    disk = object({\n      capacity_enabled             = optional(bool, false)\n      free_space_less_than_percent = optional(number, 10)\n      io_above_percent             = optional(number, 90)\n      io_enabled                   = optional(bool, false)\n      io_over_period               = optional(string, \"15m\")\n      rate_increase_percent        = optional(number, 10)\n      rate_limit_mb_per_member     = optional(number, 3670016)\n      rate_period_seconds          = optional(number, 900)\n      rate_units                   = optional(string, \"mb\")\n    })\n    memory = object({\n      io_above_percent         = optional(number, 90)\n      io_enabled               = optional(bool, false)\n      io_over_period           = optional(string, \"15m\")\n      rate_increase_percent    = optional(number, 10)\n      rate_limit_mb_per_member = optional(number, 114688)\n      rate_period_seconds      = optional(number, 900)\n      rate_units               = optional(string, \"mb\")\n    })\n  })",
      "description": "(Optional) Configure rules to allow your database to automatically increase its resources. Single block of autoscaling is allowed at once.",
      "pos": {
        "filename": "variables.tf",
        "line": 170
      }
    },
    "backup_crn": {
      "name": "backup_crn",
      "type": "string",
      "description": "The CRN of a backup resource to restore from. The backup is created by a database deployment with the same service ID. The backup is loaded after provisioning and the new deployment starts up that uses that data. A backup CRN is in the format crn:v1:\u003câ€¦\u003e:backup:. If omitted, the database is provisioned empty.",
      "source": [
        "ibm_database.postgresql_db.backup_id"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 62
      }
    },
    "backup_encryption_key_crn": {
      "name": "backup_encryption_key_crn",
      "type": "string",
      "description": "(Optional) The CRN of a key protect key, that you want to use for encrypting disk that holds deployment backups. If null, will use 'key_protect_key_crn' as encryption key. If 'key_protect_key_crn' is also null database is encrypted by using randomly generated keys.",
      "pos": {
        "filename": "variables.tf",
        "line": 209
      }
    },
    "cbr_rules": {
      "name": "cbr_rules",
      "type": "list(object({\n    description = string\n    account_id  = string\n    rule_contexts = list(object({\n      attributes = optional(list(object({\n        name  = string\n        value = string\n    }))) }))\n    enforcement_mode = string\n  }))",
      "description": "(Optional, list) List of CBR rules to create",
      "default": [],
      "source": [
        "module.cbr_rule",
        "module.cbr_rule",
        "module.cbr_rule",
        "module.cbr_rule",
        "module.cbr_rule"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 220
      }
    },
    "configuration": {
      "name": "configuration",
      "type": "object({\n    max_connections            = optional(number)\n    max_prepared_transactions  = optional(number)\n    deadlock_timeout           = optional(number)\n    effective_io_concurrency   = optional(number)\n    max_replication_slots      = optional(number)\n    max_wal_senders            = optional(number)\n    shared_buffers             = optional(number)\n    synchronous_commit         = optional(string)\n    wal_level                  = optional(string)\n    archive_timeout            = optional(number)\n    log_min_duration_statement = optional(number)\n  })",
      "description": "(Optional, Json String) Database Configuration in JSON format.",
      "source": [
        "ibm_database.postgresql_db.configuration"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 152
      }
    },
    "key_protect_key_crn": {
      "name": "key_protect_key_crn",
      "type": "string",
      "description": "(Optional) The root key CRN of a Key Management Service like Key Protect or Hyper Protect Crypto Service (HPCS) that you want to use for disk encryption. If `null`, database is encrypted by using randomly generated keys. See https://cloud.ibm.com/docs/cloud-databases?topic=cloud-databases-key-protect\u0026interface=ui#key-byok for current list of supported regions for BYOK",
      "source": [
        "ibm_database.postgresql_db.key_protect_key"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 203
      },
      "immutable": true
    },
    "member_cpu_count": {
      "name": "member_cpu_count",
      "type": "string",
      "description": "CPU allocation required for postgresql database",
      "default": "3",
      "pos": {
        "filename": "variables.tf",
        "line": 88
      }
    },
    "member_disk_mb": {
      "name": "member_disk_mb",
      "type": "string",
      "description": "Disk allocation required for postgresql database",
      "default": "5120",
      "pos": {
        "filename": "variables.tf",
        "line": 75
      }
    },
    "member_memory_mb": {
      "name": "member_memory_mb",
      "type": "string",
      "description": "Memory allocation required for postgresql database",
      "default": "1024",
      "pos": {
        "filename": "variables.tf",
        "line": 49
      }
    },
    "members": {
      "name": "members",
      "type": "number",
      "description": "Number of members",
      "default": 3,
      "pos": {
        "filename": "variables.tf",
        "line": 114
      }
    },
    "name": {
      "name": "name",
      "type": "string",
      "description": "Name of the Postgresql instance",
      "required": true,
      "source": [
        "ibm_database.postgresql_db.name"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 10
      }
    },
    "pg_version": {
      "name": "pg_version",
      "type": "string",
      "description": "Version of the postgresql instance",
      "source": [
        "ibm_database.postgresql_db.version"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 27
      },
      "immutable": true,
      "computed": true
    },
    "pitr_id": {
      "name": "pitr_id",
      "type": "string",
      "description": "(Optional) The ID of the postgresql instance that you want to recover back to. Here ID of the postgresql instance is expected to be up and in running state.",
      "source": [
        "ibm_database.postgresql_db.point_in_time_recovery_deployment_id"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 240
      }
    },
    "pitr_time": {
      "name": "pitr_time",
      "type": "string",
      "description": "(Optional) The timestamp in UTC format (%Y-%m-%dT%H:%M:%SZ) that you want to restore to. To retrieve the timestamp, run the command (ibmcloud cdb postgresql earliest-pitr-timestamp \u003cdeployment name or CRN\u003e)",
      "source": [
        "ibm_database.postgresql_db.point_in_time_recovery_time"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 246
      }
    },
    "plan_validation": {
      "name": "plan_validation",
      "type": "bool",
      "description": "Enable or disable validating the database parameters for postgres during the plan phase",
      "default": true,
      "source": [
        "ibm_database.postgresql_db.plan_validation"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 15
      }
    },
    "region": {
      "name": "region",
      "type": "string",
      "description": "The region postgresql is to be created on. The region must support BYOK if key_protect_key_crn is used",
      "default": "us-south",
      "required": true,
      "source": [
        "ibm_database.postgresql_db.location"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 43
      },
      "cloud_data_type": "region"
    },
    "remote_leader_crn": {
      "name": "remote_leader_crn",
      "type": "string",
      "description": "The CRN of the leader database to make the replica(read-only) deployment.",
      "source": [
        "ibm_database.postgresql_db.remote_leader_id"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 21
      }
    },
    "resource_group_id": {
      "name": "resource_group_id",
      "type": "string",
      "description": "The resource group ID where the postgresql will be created",
      "required": true,
      "source": [
        "ibm_database.postgresql_db.resource_group_id"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 5
      },
      "cloud_data_type": "resource_group",
      "immutable": true,
      "computed": true,
      "cloud_data_range": [
        "resolved_to:id"
      ]
    },
    "resource_tags": {
      "name": "resource_tags",
      "type": "list(string)",
      "description": "Optional list of tags to be added to created resources",
      "default": [],
      "source": [
        "ibm_database.postgresql_db.tags",
        "ibm_resource_key.service_credentials.tags"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 137
      },
      "cloud_data_type": "tags",
      "min_length": 1,
      "max_length": 128,
      "matches": "^[A-Za-z0-9:_ .-]+$",
      "computed": true,
      "elem": {
        "type": "TypeString"
      }
    },
    "service_credential_names": {
      "name": "service_credential_names",
      "type": "map(string)",
      "description": "Map of name, role for service credentials that you want to create for the database",
      "default": {},
      "source": [
        "ibm_resource_key.service_credentials.for_each"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 101
      }
    },
    "service_endpoints": {
      "name": "service_endpoints",
      "type": "string",
      "description": "Sets the endpoint of the Postgresql instance, valid values are 'public', 'private', or 'public-and-private'",
      "default": "private",
      "source": [
        "ibm_database.postgresql_db.service_endpoints"
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 127
      },
      "options": "public, private, public-and-private"
    }
  },
  "outputs": {
    "cbr_rule_ids": {
      "name": "cbr_rule_ids",
      "description": "CBR rule ids created to restrict Postgresql",
      "pos": {
        "filename": "outputs.tf",
        "line": 38
      }
    },
    "crn": {
      "name": "crn",
      "description": "Postgresql instance crn",
      "value": "ibm_database.postgresql_db.resource_crn",
      "pos": {
        "filename": "outputs.tf",
        "line": 20
      },
      "type": "TypeString"
    },
    "guid": {
      "name": "guid",
      "description": "Postgresql instance guid",
      "value": "ibm_database.postgresql_db.guid",
      "pos": {
        "filename": "outputs.tf",
        "line": 10
      },
      "type": "TypeString"
    },
    "id": {
      "name": "id",
      "description": "Postgresql instance id",
      "value": "ibm_database.postgresql_db.id",
      "pos": {
        "filename": "outputs.tf",
        "line": 5
      }
    },
    "service_credentials_json": {
      "name": "service_credentials_json",
      "description": "Service credentials json map",
      "value": "local.service_credentials_json",
      "sensitive": true,
      "pos": {
        "filename": "outputs.tf",
        "line": 25
      }
    },
    "service_credentials_object": {
      "name": "service_credentials_object",
      "description": "Service credentials object",
      "value": "local.service_credentials_object",
      "sensitive": true,
      "pos": {
        "filename": "outputs.tf",
        "line": 31
      }
    },
    "version": {
      "name": "version",
      "description": "Postgresql instance version",
      "value": "ibm_database.postgresql_db.version",
      "pos": {
        "filename": "outputs.tf",
        "line": 15
      },
      "type": "TypeString"
    }
  },
  "required_core": [
    "\u003e= 1.3.0"
  ],
  "required_providers": {
    "ibm": {
      "source": "IBM-Cloud/ibm",
      "version_constraints": [
        "\u003e= 1.49.0"
      ]
    }
  },
  "managed_resources": {
    "ibm_database.postgresql_db": {
      "mode": "managed",
      "type": "ibm_database",
      "name": "postgresql_db",
      "attributes": {
        "backup_id": "backup_crn",
        "configuration": "configuration",
        "key_protect_key": "key_protect_key_crn",
        "location": "region",
        "name": "name",
        "plan_validation": "plan_validation",
        "point_in_time_recovery_deployment_id": "pitr_id",
        "point_in_time_recovery_time": "pitr_time",
        "remote_leader_id": "remote_leader_crn",
        "resource_group_id": "resource_group_id",
        "service_endpoints": "service_endpoints",
        "tags": "resource_tags",
        "version": "pg_version"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 13
      }
    },
    "ibm_resource_key.service_credentials": {
      "mode": "managed",
      "type": "ibm_resource_key",
      "name": "service_credentials",
      "attributes": {
        "for_each": "service_credential_names",
        "tags": "resource_tags"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 148
      }
    }
  },
  "data_resources": {},
  "module_calls": {
    "cbr_rule": {
      "name": "cbr_rule",
      "source": "git::https://github.com/terraform-ibm-modules/terraform-ibm-cbr//cbr-rule-module?ref=v1.2.0",
      "attributes": {
        "count": "cbr_rules",
        "enforcement_mode": "cbr_rules",
        "resources": "cbr_rules",
        "rule_contexts": "cbr_rules",
        "rule_description": "cbr_rules"
      },
      "managed_resources": {
        "ibm_cbr_rule.cbr_rule": {
          "mode": "managed",
          "type": "ibm_cbr_rule",
          "name": "cbr_rule",
          "attributes": {
            "description": "rule_description",
            "enforcement_mode": "enforcement_mode"
          },
          "provider": {
            "name": "ibm"
          },
          "pos": {
            "filename": ".terraform/modules/cbr_rule/cbr-rule-module/main.tf",
            "line": 7
          }
        }
      },
      "data_resources": {},
      "outputs": {
        "rule_crn": {
          "name": "rule_crn",
          "description": "CBR rule resource instance crn",
          "value": "ibm_cbr_rule.cbr_rule.crn",
          "pos": {
            "filename": ".terraform/modules/cbr_rule/cbr-rule-module/outputs.tf",
            "line": 15
          },
          "type": "TypeString",
          "cloud_data_type": "crn"
        },
        "rule_description": {
          "name": "rule_description",
          "description": "CBR rule resource instance description",
          "value": "ibm_cbr_rule.cbr_rule.description",
          "pos": {
            "filename": ".terraform/modules/cbr_rule/cbr-rule-module/outputs.tf",
            "line": 5
          },
          "type": "TypeString"
        },
        "rule_href": {
          "name": "rule_href",
          "description": "CBR rule resource href",
          "value": "ibm_cbr_rule.cbr_rule.href",
          "pos": {
            "filename": ".terraform/modules/cbr_rule/cbr-rule-module/outputs.tf",
            "line": 20
          },
          "type": "TypeString"
        },
        "rule_id": {
          "name": "rule_id",
          "description": "CBR rule resource instance id",
          "value": "ibm_cbr_rule.cbr_rule.id",
          "pos": {
            "filename": ".terraform/modules/cbr_rule/cbr-rule-module/outputs.tf",
            "line": 10
          }
        }
      },
      "pos": {
        "filename": "main.tf",
        "line": 110
      }
    }
  }
}
